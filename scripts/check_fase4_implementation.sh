#!/bin/bash

echo "üîß Verificando implementa√ß√£o da Fase 4..."

echo ""
echo "üìã CHECKLIST DE IMPLEMENTA√á√ÉO:"

echo ""
echo "=== Issue 13: Bot√£o Home e Menu de Ferramentas ==="

# Bot√£o Home
if grep -q "_isAtHome" src/lib/screens/file_explorer_screen.dart; then
    echo "‚úÖ Bot√£o Home: L√≥gica de detec√ß√£o implementada"
else
    echo "‚ùå Bot√£o Home: L√≥gica de detec√ß√£o n√£o encontrada"
fi

if grep -q "FontAwesomeIcons.house" src/lib/screens/file_explorer_screen.dart; then
    echo "‚úÖ Bot√£o Home: √çcone correto implementado"
else
    echo "‚ùå Bot√£o Home: √çcone n√£o encontrado"
fi

# Tools Drawer
if grep -q "endDrawer.*ToolsDrawer" src/lib/screens/file_explorer_screen.dart; then
    echo "‚úÖ Tools Drawer: Configurado no Scaffold"
else
    echo "‚ùå Tools Drawer: N√£o configurado no Scaffold"
fi

if grep -q "Scaffold.of(context).openEndDrawer" src/lib/screens/file_explorer_screen.dart; then
    echo "‚úÖ Bot√£o Ferramentas: Abre drawer corretamente"
else
    echo "‚ùå Bot√£o Ferramentas: N√£o abre drawer (pode navegar para settings)"
fi

# Comandos pr√©-definidos
if [ -f "src/lib/models/predefined_commands.dart" ]; then
    echo "‚úÖ Comandos Pr√©-definidos: Arquivo existe"
    if grep -q "Informa√ß√µes.*Sistema.*Rede.*Logs" src/lib/models/predefined_commands.dart; then
        echo "‚úÖ Comandos Pr√©-definidos: Categorias implementadas"
    else
        echo "‚ö†Ô∏è Comandos Pr√©-definidos: Verificar categorias"
    fi
else
    echo "‚ùå Comandos Pr√©-definidos: Arquivo n√£o encontrado"
fi

# Comandos personalizados
if [ -f "src/lib/widgets/add_custom_command_dialog.dart" ]; then
    echo "‚úÖ Comandos Personalizados: Dialog implementado"
else
    echo "‚ùå Comandos Personalizados: Dialog n√£o encontrado"
fi

if [ -f "src/lib/services/custom_commands_service.dart" ]; then
    echo "‚úÖ Comandos Personalizados: Service implementado"
else
    echo "‚ùå Comandos Personalizados: Service n√£o encontrado"
fi

echo ""
echo "=== Issue 14: Sistema de Notifica√ß√£o ==="

if [ -f "src/lib/services/notification_service.dart" ]; then
    echo "‚úÖ NotificationService: Implementado"
else
    echo "‚ùå NotificationService: N√£o encontrado"
fi

if [ -f "src/lib/screens/notification_settings_screen.dart" ]; then
    echo "‚úÖ Tela de Configura√ß√µes de Notifica√ß√£o: Implementada"
else
    echo "‚ùå Tela de Configura√ß√µes de Notifica√ß√£o: N√£o encontrada"
fi

echo ""
echo "=== Issue 15: Design e √çcones ==="

if grep -q "useMaterial3.*true" src/lib/themes/app_theme.dart; then
    echo "‚úÖ Material 3: Habilitado"
else
    echo "‚ùå Material 3: N√£o habilitado"
fi

if [ -f "src/lib/widgets/file_type_indicator.dart" ]; then
    echo "‚úÖ Sistema de √çcones de Arquivos: Implementado"
else
    echo "‚ùå Sistema de √çcones de Arquivos: N√£o encontrado"
fi

echo ""
echo "=== PROBLEMAS IDENTIFICADOS ==="

# Verificar se o bot√£o est√° navegando para settings em vez de abrir drawer
if grep -q "Navigator.pushNamed.*settings" src/lib/screens/file_explorer_screen.dart; then
    echo "üö® CR√çTICO: Bot√£o de ferramentas navega para settings em vez de abrir drawer!"
fi

echo ""
echo "=== RESUMO ==="
echo "Fase 4 parcialmente implementada."
echo "Principais problemas:"
echo "1. Bot√£o de ferramentas deve abrir drawer, n√£o navegar"
echo "2. Verificar se comandos SSH est√£o executando"
echo "3. Testar funcionalidade completa do ToolsDrawer"

echo ""
echo "üîß Execute 'flutter run' e teste:"
echo "1. Toque no bot√£o ‚öôÔ∏è - deve abrir drawer lateral"
echo "2. Execute comandos no drawer"
echo "3. Adicione comandos personalizados"
