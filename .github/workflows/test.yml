name: Flutter Tests and Quality Checks

on:
  workflow_dispatch:
  label:
    types:
      - created
  pull_request:
    branches: [ main ]
 

jobs:
  analyze:
    name: Code Analysis
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: 3.32.8

      - name: Check Flutter and Dart versions
        run: |
          flutter --version
          dart --version

      - name: Clean Flutter cache
        working-directory: ./src
        run: flutter clean

      - name: Get dependencies
        run: |
          cd src
          if [ ! -f .env ]; then
            touch .env
          fi
          flutter pub get

      - name: Verify formatting
        run: |
          # Run dart format on tracked Dart files but exclude generated l10n files
          cd src
          git ls-files '*.dart' | grep -v '^lib/l10n/' | xargs dart format --output=none --set-exit-if-changed

      - name: Analyze project source
        run: |
          cd src/lib
          flutter analyze

      - name: Check for outdated dependencies
        run: |
          cd src
          flutter pub outdated

  test:
    name: Unit and Widget Tests
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: |
          cd src
          if [ ! -f .env ]; then
            touch .env
          fi
          flutter pub get

      - name: Generate mocks (if needed)
        run: |
          cd src
          flutter pub add build_runner
          flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Run unit tests (providers and models)
        run: |
          cd src
          flutter test test/providers/ test/models/ --coverage --reporter=compact

      - name: Run additional unit tests (if they exist)
        run: |
          cd src
          flutter test test/widgets/ --reporter=compact
          flutter test test/services/ --reporter=compact

      - name: Run working unit tests only
        run: |
          cd src
          flutter test test/providers/ssh_provider_test.dart --reporter=compact
          flutter test test/models/ --reporter=compact

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  performance:
    name: Performance Tests
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: |
          cd src
          if [ ! -f .env ]; then
            touch .env
          fi
          flutter pub get          

      - name: Run performance tests
        run: |
          cd src
          flutter test test/performance/ --reporter=compact

  accessibility:
    name: Accessibility Tests
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: |
          cd src
          if [ ! -f .env ]; then
            touch .env
          fi
          flutter pub get

      - name: Run accessibility tests (if they exist)
        run: |
          cd src
          flutter test test/accessibility/ --reporter=compact

  coverage-report:
    name: Coverage Report
    runs-on: self-hosted
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: |
          cd src
          if [ ! -f .env ]; then
            touch .env
          fi
          flutter pub get

      - name: Generate mocks 
        run: |
          cd src
          flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Run working tests with coverage
        run: |
          cd src
          flutter test test/providers/ test/models/ --coverage --reporter=compact

      # - name: Generate coverage HTML report
      #   run: |
      #     cd src
      #     mkdir -p coverage/html
      #     sudo apt-get update
      #     sudo apt-get install -y lcov
      #     genhtml coverage/lcov.info -o coverage/html

      # - name: Upload coverage report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: coverage-report
      #     path: src/coverage/html/

  security:
    name: Security Check
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: |
          cd src
          if [ ! -f .env ]; then
            touch .env
          fi
          flutter pub get

      - name: Run security audit
        run: |
          cd src
          flutter pub deps --json | jq '.packages[] | select(.kind == "direct") | .name' | xargs -I {} echo "Checking {}"

      - name: Check for known vulnerabilities
        run: |
          cd src
          flutter pub deps